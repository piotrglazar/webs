buildscript {
    repositories {
        maven {
            url "http://repo.spring.io/libs-snapshot"
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.6.RELEASE")
        classpath("org.zeroturnaround:gradle-jrebel-plugin:1.1.2")
        classpath("org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0")
    }
}

plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.2.0'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'rebel'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'sonar-runner'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'pmd'

repositories {
    mavenCentral()
    maven {
        url "http://repo.spring.io/libs-snapshot"
    }
}

dependencies {
    // jetty
    compile("org.springframework.boot:spring-boot-starter-web:1.2.6.RELEASE") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty:1.2.6.RELEASE")
    // actuator
    compile("org.springframework.boot:spring-boot-starter-actuator:1.2.6.RELEASE")
    // thymeleaf
    compile("org.springframework.boot:spring-boot-starter-thymeleaf:1.2.6.RELEASE")
    // security
    compile("org.springframework.boot:spring-boot-starter-security:1.2.6.RELEASE")
    // data
    compile("org.springframework.boot:spring-boot-starter-data-jpa:1.2.6.RELEASE")
    // db
    compile("org.hsqldb:hsqldb:2.3.3")
    // guava
    compile("com.google.guava:guava:18.0")
    // validation
    compile("javax.validation:validation-api:1.1.0.Final")
    compile("org.hibernate:hibernate-validator:5.2.2.Final")
    // context-support
    compile("org.springframework:spring-context-support:4.1.6.RELEASE")
    // mail
    compile("javax.mail:mail:1.4.7")
    // log
    compile("org.slf4j:slf4j-api:1.7.12")
    // velocity
    compile("org.springframework.boot:spring-boot-starter-velocity:1.2.6.RELEASE")
    // logback
    compile("ch.qos.logback:logback-classic:1.1.3")
    // rest
    compile("javax.ws.rs:javax.ws.rs-api:2.0.1")
    compile("org.glassfish.jersey.core:jersey-client:2.16")
    // html parsing
    compile("org.jsoup:jsoup:1.8.3")
    // annotations
    compile("com.google.code.findbugs:jsr305:3.0.0")
    // rx java
    compile("io.reactivex:rxjava:1.0.14")


    testCompile("junit:junit:4.12")
    testCompile("org.mockito:mockito-all:1.10.19")
    testCompile("org.assertj:assertj-core:1.7.1")
    testCompile("org.springframework.boot:spring-boot-starter-test:1.2.6.RELEASE")
    testCompile("nl.jqno.equalsverifier:equalsverifier:1.7.5")
    testCompile("pl.pragmatists:JUnitParams:1.0.4")
}

jar.dependsOn(generateRebel)

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

jacoco {
    toolVersion = '0.7.4.+'
}

jacocoTestReport {
    reports {
        html.destination "$buildDir/reports/jacoco"
        xml.enabled = true
        html.enabled = true
    }
}

sourceCompatibility = 1.8

sonarRunner {
    toolVersion = '2.4'
    sonarProperties {
        property "sonar.exclusions", "src/main/java/com/piotrglazar/webs/config/*.java"
    }
}

checkstyle {
    toolVersion = '6.4'
    ignoreFailures = true
}

pmd {
    ignoreFailures = true
}

findbugs {
    toolVersion = '3.0.0'
    effort = 'max'
    ignoreFailures = true
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

scmVersion {
    tag {
        prefix = 'webs'
    }
}

// make our version available to all
project.version = scmVersion.version

jar {
    baseName = 'webs'
    version =  project.version
}
